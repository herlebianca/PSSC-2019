@model MyPlanner.Models.MyTaskAsigneeViewModel

@{ViewData["Title"] = "Available tasks";}
    <style>
        .masonry {
            margin: 1.5em 0;
            padding: 0;
            -moz-column-gap: 1.5em;
            -webkit-column-gap: 1.5em;
            column-gap: 1.5em;
            font-size: .85em;
            -moz-column-count: 3;
            -webkit-column-count: 3;
            column-count: 3;
        }

        .item {
            display: inline-block;
            background: #ffb366;
            padding: 1.5em;
            margin: 0 0 1.5em;
            width: 100%;
            box-sizing: border-box;
            -moz-box-sizing: border-box;
            -webkit-box-sizing: border-box;
            border-radius: 3px;
            -moz-border-radius: 3px;
            -webkit-border-radius: 3px;
        }
    </style>
<body style='background: #1d9172'>
    <h1> <font color="white">Available Tasks</font></h1>

    <p>
        <font color="white">
            <a asp-action="Create"><font color="white">Create New</font></a>
        </font>
    </p>
    <form asp-controller="MyTasks" asp-action="Index" method="get">
        <p>
            <font color="white">
                Asignee:
                <select asp-for="MyTaskAsignee" asp-items="Model.Asignees">
                    <option value="">All</option>
                </select>

                Project: <input type="text" asp-for="SearchString" />
                <input type="submit" value="Filter" />
            </font>
        </p>
    </form>
    <div class="masonry">
        @foreach (var item in Model.MyTasks)
        {
            <div class="item">
                <font color="white">
                    <p>@Html.DisplayFor(modelItem => item.Description)</p>
                    <p>@Html.DisplayFor(modelItem => item.Project)</p>
                    <p>@Html.DisplayFor(modelItem => item.Owner)</p>
                    <p>@Html.DisplayFor(modelItem => item.Asignee)</p>
                    <p> @Html.DisplayFor(modelItem => item.Status)</p>
                    <p>@Html.DisplayFor(modelItem => item.Review)</p>
                    <p>
                        <a asp-action="Edit" asp-route-id="@item.Id" asp-route-from_dashboard="no"><font color="white">Edit |</font></a>
                        <a asp-action="Details" asp-route-id="@item.Id"><font color="white">Details |</font></a>
                        <a asp-action="Delete" asp-route-id="@item.Id"><font color="white">Delete</font></a>
                    </p>
                </font>
            </div>
            
        }
    </div>

    @if (ViewBag.Message != null)
    {
        <script type="text/javascript">
            window.onload = function () {
                alert("@ViewBag.Message");
            };
        </script>
    }
</body>
