@model MyPlanner.Models.MyTaskAsigneeViewModel

@{ViewData["Title"] = "Index";}

<style>
    .masonry {
        margin: 1.5em 0;
        padding: 0;
        -moz-column-gap: 1.5em;
        -webkit-column-gap: 1.5em;
        column-gap: 1.5em;
        font-size: .85em;
        -moz-column-count: 3;
        -webkit-column-count: 3;
        column-count: 3;
    }

    .item {
        display: inline-block;
        background-image: linear-gradient(#730099, #cc99ff);
        padding: 1.5em;
        margin: 0 0 1.5em;
        width: 100%;
        box-sizing: border-box;
        -moz-box-sizing: border-box;
        -webkit-box-sizing: border-box;
        border-radius: 3px;
        -moz-border-radius: 3px;
        -webkit-border-radius: 3px;
        text-shadow: 1px 1px black;
        -webkit-box-shadow: 10px 10px 5px 0px rgba(69,44,69,1);
        -moz-box-shadow: 10px 10px 5px 0px rgba(69,44,69,1);
        box-shadow: 10px 10px 5px 0px rgba(69,44,69,1);
    }
</style>

<body style='background: #1a1a1a'>
    <h1> <font color="white">Dashboard </font></h1>

    <p>
        <font color="white">
            <a asp-controller="MyTasks" asp-action="Create"><font color="white">Create New</font></a>
        </font>
    </p>
    <div class="masonry">
        @foreach (var item in Model.MyTasks)
        {
            <div class="item">
                <font color=white>
                    <p>Description: @Html.DisplayFor(modelItem => item.Description)</p>
                        <p>Due date: @Html.DisplayFor(modelItem => item.Due_Date)</p>
                        <p>Owner: @Html.DisplayFor(modelItem => item.Owner)</p>
                        <p>Location: @Html.DisplayFor(modelItem => item.Location)</p>
                        <p>Urgency: @Html.DisplayFor(modelItem => item.Urgency)</p>
                        <p>Transfer: @Html.DisplayFor(modelItem => item.Transfer)</p>
                        <p>Duration: @Html.DisplayFor(modelItem => item.Duration) hours</p>
                        <p>Involves physical effort: @Html.DisplayFor(modelItem => item.Physical_Effort)</p>
                        <p>Tag: @Html.DisplayFor(modelItem => item.Tag)</p>
                        <p>Asignee: @Html.DisplayFor(modelItem => item.Asignee)</p>
                        <p>Status: @Html.DisplayFor(modelItem => item.Status)</p>
                        <p>Rating: @Html.DisplayFor(modelItem => item.RatingFloat) <img src="~/Content/Images/star.png" width="22" height="22" /></p>
                    <p>
                        <a asp-controller="MyTasks" asp-action="Edit" asp-route-id="@item.Id" asp-route-from_dashboard="no"><font color="white">Edit |</font></a>
                        <a asp-controller="MyTasks" asp-action="Details" asp-route-id="@item.Id"><font color="white">Details |</font></a>
                        <a asp-controller="MyTasks" asp-action="Delete" asp-route-id="@item.Id"><font color="white">Delete</font></a>
                    </p>
                </font>
            </div>

        }
    </div>
    
    @if (ViewBag.Message != null)
    {
        <script type="text/javascript">
            window.onload = function () {
                alert("@ViewBag.Message");
            };
        </script>
    }
</body>
